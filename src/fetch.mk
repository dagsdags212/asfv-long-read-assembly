# Project accession.
PRJA ?= PRJNA857442

# Assembly accession.
ASM ?= ON963982

# Swine reference accession.
GCF ?= GCF_000003025.6 

# Path to project metadata.
RUNINFO = metadata/runinfo.csv

# Path to accession list.
ACCESSIONS = metadata/accessions.txt

# Path to refseq accession list.
REFSEQ = metadata/refseq_accessions.txt

# Number of spots to download. (set to ALL to fetch all reads)
N ?= 1000


usage:
	@echo ""
	@echo "fetch.mk: download data associated to the study"
	@echo ""
	@echo "Commands:"
	@echo ""
	@echo "  run           download reads and reference sequences"
	@echo "  runinfo       retrieve runinfo for a sequencing project"
	@echo "  accessions    extract a list of accession from a runinfo file"
	@echo "  reads         download FASTQ files from a list of SRA accessions"
	@echo "  refseq        write RefSeq accessions to a text file"
	@echo "  refs          download RefSeq sequences, including swine genome"
	@echo "  clean         delete all files generated by this program"
	@echo ""

run: reads refs

# Retrieve runinfo from NCBI SRA.
${RUNINFO}:
	# Create metadata output directory.
	mkdir -p metadata

	# Retrieve project metadata from SRA.
	esearch -db sra -query ${PRJA} | efetch -format runinfo > $@

${ACCESSIONS}: ${RUNINFO}
	cat $< | cut -d, -f1 | tail +2 > $@

# Generate runinfo.
runinfo: ${RUNINFO}
	head $<

# Generate accessions list.
accessions: ${ACCESSIONS}
	head $<

# fastq-dump options.
fastq_dump_opts := --skip-technical --origfmt -O reads -v -v
ifneq ($(N),ALL)
	fastq_dump_opts += -X $(N)
endif

reads: ${ACCESSIONS}
	# Create directory for storing reads.
	mkdir -p reads

	# Download reads in parallel.
	cat $< | parallel fastq-dump $(fastq_dump_opts) {}

	# List contents of reads directory.
	ls -lh reads

# Create RefSeq accession list.
${REFSEQ}:
	@echo U18466.2 > $@
	@echo KX354450.1 >> $@
	@echo MN270978.1 >> $@
	@echo MN270976.1 >> $@
	@echo MN270977.1 >> $@
	@echo MN270979.1 >> $@
	@echo MN270980.1 >> $@
	@echo MN270973.1 >> $@
	@echo MN270974.1 >> $@
	@echo MN270975.1 >> $@
	@echo MN270971.1 >> $@
	@echo MN270970.1 >> $@
	@echo AM712239.1 >> $@
	@echo FN557520.1 >> $@
	@echo AM712240.1 >> $@
	@echo AY261362.1 >> $@
	@echo MN913970.1 >> $@
	@echo FR682468.2 >> $@
	@echo MT459800.1 >> $@
	@echo MH681419.1 >> $@
	@echo MK628478.1 >> $@
	@echo MW306192.1 >> $@
	@echo MK128995.1 >> $@
	@echo MT496893.1 >> $@
	@echo MK645909.1 >> $@
	@echo MK940252.1 >> $@
	@echo MN194591.1 >> $@
	@echo MT847620.1 >> $@
	@echo MT847623.2 >> $@
	@echo MT847622.1 >> $@
	@echo MT847621.1 >> $@
	@echo MK543947.1 >> $@
	@echo MN393476.1 >> $@
	@echo MW396979.1 >> $@
	@echo MN715134.1 >> $@
	@echo MN172368.1 >> $@
	@echo MK333180.1 >> $@
	@echo MW306190.1 >> $@
	@echo MW306191.1 >> $@
	@echo MT882025.1 >> $@
	@echo LS478113.1 >> $@
	@echo MW656282.1 >> $@
	@echo MW856068.1 >> $@
	@echo AY261366.1 >> $@
	@echo AY261363.1 >> $@
	@echo MN318203.3 >> $@
	@echo MN336500.3 >> $@
	@echo MN394630.3 >> $@
	@echo MN641876.2 >> $@
	@echo MN641877.2 >> $@
	@echo MN630494.2 >> $@
	@echo AY261365.1 >> $@
	@echo AY261364.1 >> $@
	@echo AY261360.1 >> $@
	@echo MT956648.1 >> $@
	@echo MW856067.1 >> $@
	@echo KM111294.1 >> $@
	@echo KM111295.1 >> $@
	@echo AY261361.1 >> $@

# Generate RefSeq accession list.
refseq: ${REFSEQ}
	ls -lh $<

# Retrieve RefSeq sequences.
refs: ${REFSEQ}
	# Create directory for reference genomes.
	mkdir -p refs

	# Retrieve RefSeq records.
	cat $< | parallel --delay 2 -j 3 --progress "efetch -db nuccore -id {} -format fasta > refs/{}.fa"

	# Download swine reference genome.
	datasets download genome accession ${GCF} --filename swine.zip
	unzip swine.zip -d swine
	mv swine/ncbi_dataset/data/**/*.fna refs
	rm -rf swine

# Delete runinfo.
runinfo!:
	rm -f ${RUNINFO}

# Delete accession list.
accessions!:
	rm -f ${ACCESSIONS}

# Delete fastq reads.
reads!:
	rm -rf reads

refseq!:
	rm -f ${REFSEQ}

# Delete RefSeq sequences.
refs!:
	rm -rf refs

# Remove all downloaded files.
clean: runinfo! accessions! reads! refseq! refs!

.PHONY: runinfo runinfo! accessions accessions! reads reads! refseq refseq! refs refs! fetch
